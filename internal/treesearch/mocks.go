// Code generated by mockery v1.0.0. DO NOT EDIT.

package treesearch

import (
	othello "github.com/lk16/dots/internal/othello"
	mock "github.com/stretchr/testify/mock"
)

// mockSearcher is an autogenerated mock type for the Searcher type
type mockSearcher struct {
	mock.Mock
}

// ExactSearch provides a mock function with given fields: board, alpha, beta
func (_m *mockSearcher) ExactSearch(board othello.Board, alpha int, beta int) int {
	ret := _m.Called(board, alpha, beta)

	var r0 int
	if rf, ok := ret.Get(0).(func(othello.Board, int, int) int); ok {
		r0 = rf(board, alpha, beta)
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// GetStats provides a mock function with given fields:
func (_m *mockSearcher) GetStats() Stats {
	ret := _m.Called()

	var r0 Stats
	if rf, ok := ret.Get(0).(func() Stats); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(Stats)
	}

	return r0
}

// Name provides a mock function with given fields:
func (_m *mockSearcher) Name() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// ResetStats provides a mock function with given fields:
func (_m *mockSearcher) ResetStats() {
	_m.Called()
}

// Search provides a mock function with given fields: board, alpha, beta, depth
func (_m *mockSearcher) Search(board othello.Board, alpha int, beta int, depth int) int {
	ret := _m.Called(board, alpha, beta, depth)

	var r0 int
	if rf, ok := ret.Get(0).(func(othello.Board, int, int, int) int); ok {
		r0 = rf(board, alpha, beta, depth)
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}
